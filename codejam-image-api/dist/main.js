/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "./dist";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/githubAuthorize.js":
/*!********************************!*\
  !*** ./src/githubAuthorize.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Authorize; });\n/* harmony import */ var _user_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./user.js */ \"./src/user.js\");\n\r\n\r\nclass Authorize {\r\n    constructor(){\r\n        this.clientId = '9a3a299faadbd0e23606';\r\n        this.clientSecret = '580d19c958745ac45a31c36bfbbe64aec6276e67';\r\n        this.redirectUri = 'https://ildar107.github.io/codejam-image-api/codejam-image-api/';\r\n        this.postUrl = 'https://github.com/login/oauth/access_token';\r\n        this.userUrl = 'https://api.github.com/user';\r\n        this.proxyUrl = 'https://cors-anywhere.herokuapp.com/';\r\n        this.accessToken = '';\r\n        this.user = {};\r\n    } \r\n\r\n    signIn () {\r\n        document.location = `https://github.com/login/oauth/authorize?client_id=${this.clientId}&redirect_uri=http%3A%2F%2Flocalhost%3A5500%2Fcodejam-image-api%2Findex.html`;\r\n    }\r\n\r\n    async getAccess_token(code) {\r\n        let data = {\r\n            code: code,\r\n            client_id: this.clientId,\r\n            client_secret: this.clientSecret\r\n        }\r\n        try {\r\n            let response =  await fetch(this.proxyUrl + this.postUrl, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'Access-Control-Allow-Origin': '*'\r\n                },\r\n                body: JSON.stringify(data), \r\n            })\r\n            let json = await response.json();\r\n            if(json.error === \"bad_verification_code\") {\r\n                document.location.search = '';\r\n            }\r\n            else {\r\n                this.accessToken = json.access_token;\r\n                this.getUser();\r\n            }\r\n        } catch(err) { \r\n            console.log(err)\r\n        }; \r\n    }\r\n\r\n    async getUser() {\r\n        let data = {\r\n            access_token: this.accessToken,\r\n            client_id: this.clientId,\r\n            client_secret: this.clientSecret\r\n        }\r\n        try {\r\n            this.userUrl += `?access_token=${this.accessToken}&client_id=this.clientId&client_secret=this.clientSecret`\r\n            let response =  await fetch(this.proxyUrl + this.userUrl, {\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Connection': 'close',\r\n                    'User-Agent': window.navigator.userAgent\r\n                },\r\n            })\r\n            let json = await response.json();\r\n            this.user = new _user_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](json.login, json.avatar_url);\r\n            this.setUserDataInHtml();\r\n        } catch(err) { \r\n            console.log(err)\r\n        }; \r\n        \r\n    }\r\n\r\n    async signOut() {\r\n        const avatar = document.getElementById('avatar');\r\n        const login = document.getElementById('login');\r\n        const authorizationBtn = document.getElementById('authorization');\r\n        avatar.style.display = 'none';\r\n        login.innerHTML = '';\r\n        authorizationBtn.innerHTML = \"Sign In\";\r\n        document.location.search = '';\r\n    }\r\n\r\n    setUserDataInHtml() {\r\n        const avatar = document.getElementById('avatar');\r\n        const login = document.getElementById('login');\r\n        const authorizationBtn = document.getElementById('authorization');\r\n        avatar.src = this.user.avatarUrl;\r\n        avatar.style.display = 'inline-block';\r\n        login.innerHTML = this.user.login;\r\n        authorizationBtn.innerHTML = \"Sign out\";\r\n    }\r\n\r\n    parseQueryString(string) {\r\n        if(string == \"\") { return {}; }\r\n        var segments = string.split(\"&\").map(s => s.split(\"=\") );\r\n        var queryString = {};\r\n        segments.forEach(s => queryString[s[0]] = s[1]);\r\n        return queryString;\r\n    }\r\n}  \r\n\n\n//# sourceURL=webpack:///./src/githubAuthorize.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _slider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./slider.js */ \"./src/slider.js\");\n/* harmony import */ var _githubAuthorize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./githubAuthorize.js */ \"./src/githubAuthorize.js\");\n\r\n\r\n\r\nlet matrixSize = 1;\r\nlet instrument = 'pencil';\r\nlet colorPrev = localStorage.getItem('colorPrev') ||'#000';\r\nlet color = localStorage.getItem('color') ||'#008000';\r\nconst randomImageUrl = `https://api.unsplash.com/photos/random`;\r\nconst sizeSlider = new _slider_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\nconst maxCanvasSize = 512;\r\nlet koff = 1;\r\nlet isImageLoaded = localStorage.getItem('isImageLoaded') || false;\r\nlet canvasSize = localStorage.getItem('canvasSize') || maxCanvasSize;\r\nlet inputRangeValue = localStorage.getItem('inputRangeValue') || sizeSlider.maxRealValue;\r\nconst auth = new _githubAuthorize_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\nconst query = auth.parseQueryString(document.location.search.substring(1));\r\nif(query.error) {\r\n    alert('Error returned from authorization server: '+ query.error);\r\n}\r\nif(query.code)\r\n    auth.getAccess_token(query.code);\r\n\r\nwindow.onload = function() {\r\n\r\n    const authorizationBtn = document.getElementById('authorization');\r\n    authorizationBtn.innerHTML = \"Sign in\";\r\n    const smallMatrixChecker = document.getElementById('small');\r\n    const largeMatrixChecker = document.getElementById('large');\r\n    const defaultMatrixChecker = document.getElementById('default');\r\n    const canvas = document.getElementById('work-canvas');\r\n\r\n    const pencil = document.getElementById('pencil');\r\n    const bucket = document.getElementById('bucket');\r\n    const colorPicker = document.getElementById('color-picker');\r\n    const grayscale = document.getElementById('grayscale');\r\n\r\n    const blueColor = document.getElementById('blue');\r\n    const redColor = document.getElementById('red');\r\n    const currColor = document.getElementById('current-color');\r\n    const prevColor = document.getElementById('prev-color');\r\n    const inputColor = document.getElementById('input-color');\r\n    const currColorContainer = document.getElementById('current-color-container');\r\n    const loadImageButton = document.getElementById('load-image');\r\n    currColor.style.backgroundColor = color;\r\n    prevColor.style.backgroundColor = colorPrev;\r\n    let lastX = 0;\r\n    let lastY = 0;\r\n\r\n    document.onkeydown = (e) => {\r\n        if (e.ctrlKey && e.code === 'KeyB') {\r\n            bucket.click();\r\n        }\r\n        if (e.ctrlKey && e.code === 'KeyP') {\r\n            pencil.click();\r\n        }\r\n        if (e.ctrlKey && e.code === 'KeyC') {\r\n            colorPicker.click();\r\n        }\r\n      };\r\n\r\n    authorizationBtn.addEventListener('click', (e) => {\r\n        \r\n        const query = auth.parseQueryString(document.location.search.substring(1));\r\n        if(query.error) {\r\n            alert('Error returned from authorization server: '+ query.error);\r\n        }\r\n        if(!query.code)\r\n            auth.signIn();\r\n        else\r\n            auth.signOut();\r\n    });\r\n\r\n    inputColor.addEventListener('change', (e) => {\r\n        color = inputColor.value;\r\n        prevColor.style.backgroundColor = currColor.style.backgroundColor;\r\n        currColor.style.backgroundColor = color;\r\n        localStorage.setItem('color', color);\r\n        localStorage.setItem('colorPrev', prevColor.style.backgroundColor);\r\n    });\r\n    currColorContainer.addEventListener('click', () => {\r\n        inputColor.click();\r\n    });  \r\n    prevColor.parentElement.addEventListener('click', () => {\r\n        color = prevColor.style.backgroundColor;\r\n        prevColor.style.backgroundColor = currColor.style.backgroundColor;\r\n        currColor.style.backgroundColor = color;\r\n        localStorage.setItem('color', color);\r\n        localStorage.setItem('colorPrev', prevColor.style.backgroundColor);\r\n    });\r\n    blueColor.addEventListener('click', () => {\r\n        color = '#0000ff';\r\n        prevColor.style.backgroundColor = currColor.style.backgroundColor;\r\n        currColor.style.backgroundColor = color;\r\n        localStorage.setItem('color', color);\r\n        localStorage.setItem('colorPrev', prevColor.style.backgroundColor)\r\n    });\r\n    redColor.addEventListener('click', () =>{\r\n        color = '#ff0000';\r\n        prevColor.style.backgroundColor = currColor.style.backgroundColor;\r\n        currColor.style.backgroundColor = color;\r\n        localStorage.setItem('color', color);\r\n        localStorage.setItem('colorPrev', prevColor.style.backgroundColor)\r\n    });\r\n\r\n    pencil.addEventListener('click', () => {\r\n        instrument = 'pencil';\r\n        if(pencil.className.search('selected-button') >= 0) {\r\n            pencil.className = pencil.className.replace(/selected-button/g, '');\r\n        }\r\n        else {\r\n            pencil.className += ' selected-button';\r\n            bucket.className = bucket.className.replace(/selected-button/g, '');\r\n            colorPicker.className = colorPicker.className.replace(/selected-button/g, '');\r\n            grayscale.className = grayscale.className.replace(/selected-button/g, '');\r\n        }\r\n    });\r\n    bucket.addEventListener('click', () =>{\r\n        instrument = 'bucket';\r\n        if(bucket.className.search('selected-button') >= 0) {\r\n            bucket.className = bucket.className.replace(/selected-button/g, '');\r\n        }\r\n        else {\r\n            bucket.className += ' selected-button';\r\n            pencil.className = pencil.className.replace(/selected-button/g, '');\r\n            colorPicker.className = colorPicker.className.replace(/selected-button/g, '');\r\n            grayscale.className = grayscale.className.replace(/selected-button/g, '');\r\n        }\r\n    });\r\n    colorPicker.addEventListener('click', (e) =>{\r\n        instrument = 'color-picker';\r\n        if(colorPicker.className.search('selected-button') >= 0) {\r\n            colorPicker.className = colorPicker.className.replace(/selected-button/g, '');\r\n        }\r\n        else {\r\n            colorPicker.className += ' selected-button';\r\n            pencil.className = pencil.className.replace(/selected-button/g, '');\r\n            bucket.className = bucket.className.replace(/selected-button/g, '');\r\n            grayscale.className = grayscale.className.replace(/selected-button/g, '');\r\n        }\r\n    });\r\n\r\n    grayscale.addEventListener('click', () => {\r\n        instrument = 'grayscale';\r\n        if(grayscale.className.search('selected-button') >= 0) {\r\n            grayscale.className = grayscale.className.replace(/selected-button/g, '');\r\n        }\r\n        else {\r\n            grayscale.className += ' selected-button';\r\n            pencil.className = pencil.className.replace(/selected-button/g, '');\r\n            bucket.className = bucket.className.replace(/selected-button/g, '');\r\n            colorPicker.className = colorPicker.className.replace(/selected-button/g, '');\r\n        }\r\n    });\r\n\r\n    smallMatrixChecker.parentElement.addEventListener('click', (e) => {\r\n        if (e.returnValue) {\r\n            smallMatrixChecker.checked = true;\r\n            matrixSize = 4;\r\n        }\r\n    });\r\n    largeMatrixChecker.parentElement.addEventListener('click', (e) => {\r\n        if (e.returnValue) {\r\n            largeMatrixChecker.checked = true;\r\n            matrixSize = 32;\r\n        }\r\n    });\r\n    defaultMatrixChecker.parentElement.addEventListener('click', (e) => {\r\n        if (e.returnValue) {\r\n            defaultMatrixChecker.checked = true;\r\n            matrixSize = 1;\r\n        }\r\n    });\r\n\r\n    canvas.addEventListener('mousemove', (e) => {\r\n        if(!isDrawing) { return; }\r\n        if(instrument === 'pencil') { \r\n            drawWithAlgorithm(lastX, lastY, e.offsetX, e.offsetY);\r\n            lastX = e.offsetX;\r\n            lastY = e.offsetY;\r\n        }\r\n    });\r\n    canvas.addEventListener('mousedown', (e) => { \r\n        isDrawing = true; \r\n        lastX = e.offsetX;\r\n        lastY = e.offsetY;\r\n        if(instrument === 'bucket') { \r\n            fillCanvasZone(e);\r\n        }\r\n        if(instrument === 'pencil') { \r\n            const point = getRectStartPoint(new Point(e.offsetX, e.offsetY));\r\n            draw(point);\r\n            lastX = e.offsetX;\r\n            lastY = e.offsetY;\r\n        }\r\n\r\n        \r\n    });\r\n    canvas.addEventListener('mouseup', () => {\r\n        isDrawing = false;\r\n        setCanvasImageToLocalStorage(canvas);\r\n    });\r\n    this.document.body.addEventListener('mouseup', () => isDrawing = false);\r\n    canvas.addEventListener('click', (e) => {\r\n        let ctx = canvas.getContext(\"2d\");\r\n        if(instrument === 'color-picker') {\r\n            const newColor = ctx.getImageData(e.offsetX, e.offsetY, 1, 1).data;\r\n            color = `rgba(${newColor[0]},${newColor[1]},${newColor[2]},${newColor[3]})`;\r\n            prevColor.style.backgroundColor = currColor.style.backgroundColor;\r\n            currColor.style.backgroundColor = color;\r\n            localStorage.setItem('color', color);\r\n            localStorage.setItem('colorPrev', prevColor.style.backgroundColor);\r\n        }\r\n        if(instrument === 'grayscale') {\r\n            if(!isImageLoaded) {\r\n                this.alert(\"Error! Please download image!\");\r\n                return;\r\n            }\r\n            const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n            const data = imageData.data;\r\n            for (var i = 0; i < data.length; i += 4) {\r\n                var avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n                data[i]     = avg; \r\n                data[i + 1] = avg; \r\n                data[i + 2] = avg; \r\n            }\r\n            ctx.putImageData(imageData, 0, 0);\r\n            setCanvasImageToLocalStorage(canvas);\r\n        }\r\n    });\r\n\r\n    \r\n    if(localStorage.getItem('currentImage')) {\r\n        setPictureToCanvas(localStorage.getItem('currentImage'));\r\n    }\r\n    else {\r\n        setPictureToCanvas();\r\n    }\r\n    defaultMatrixChecker.checked = true;\r\n    let isDrawing = false;\r\n    pencil.click();\r\n     loadImageButton.addEventListener('click', getRandomImage);\r\n    sizeSlider.Init(inputRangeValue);\r\n    canvasSize = sizeSlider.getValue();\r\n    localStorage.getItem('canvasSize', canvasSize);\r\n    sizeSlider.onChange(() => {\r\n        localStorage.setItem('inputRangeValue', sizeSlider.getRealValue());\r\n        canvasSize = sizeSlider.getValue();\r\n        localStorage.setItem('canvasSize', canvasSize);\r\n        koff = maxCanvasSize/canvasSize;\r\n        setPictureToCanvas(localStorage.getItem('currentImage'));\r\n    })\r\n    if(localStorage.getItem('currentImage'))\r\n        setPictureToCanvas(localStorage.getItem('currentImage'));\r\n};\r\n\r\nfunction draw(point) {\r\n    const canvas = document.getElementById('work-canvas');\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.fillStyle = color;\r\n    ctx.fillRect(point.x, point.y, matrixSize, matrixSize );\r\n}\r\n\r\nfunction getRectStartPoint(point) {\r\n    \r\n    return new Point(Math.floor(point.x/koff/matrixSize)*matrixSize, Math.floor(point.y/koff/matrixSize)*matrixSize);\r\n}\r\n\r\nfunction fillCanvasZone(e){\r\n    const canvas = document.getElementById('work-canvas');\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const startPoint = getRectStartPoint(new Point(e.offsetX, e.offsetY));\r\n    ctx.width = sizeSlider.getValue();\r\n    ctx.height = sizeSlider.getValue();\r\n    ctx.fillStyle = color;\r\n    const sumColor = ctx.getImageData(startPoint.x, startPoint.y, 1, 1).data.reduce((x,y,i) => x + y*(i+1), 0);\r\n    const queue = [startPoint];\r\n    const usedPoint =  new Set();\r\n    while(queue.length > 0) {\r\n        let point = queue.shift();\r\n        if(usedPoint.has(point.toString())) { \r\n            continue;\r\n        }\r\n        usedPoint.add(point.toString());\r\n        if(point.x < 0 || point.x > ctx.width || point.y < 0 || point.y > ctx.width) {\r\n            continue;\r\n        }\r\n        let newSumColor = ctx.getImageData(point.x, point.y, 1, 1).data.reduce((x,y,i) => x + y*(i+1), 0);\r\n        if(newSumColor !== sumColor) {\r\n            continue;\r\n        }\r\n        ctx.fillRect(point.x, point.y, matrixSize, matrixSize);\r\n        queue.push(new Point(point.x - matrixSize, point.y));\r\n        queue.push(new Point(point.x, point.y - matrixSize));\r\n        queue.push(new Point(point.x + matrixSize, point.y));\r\n        queue.push(new Point(point.x, point.y + matrixSize));\r\n    }\r\n  }\r\n\r\nfunction drawWithAlgorithm(x1, y1, x2, y2) {\r\n    const point1 = getRectStartPoint(new Point(x1, y1));\r\n    const point2 = getRectStartPoint(new Point(x2, y2));\r\n    const deltaX = Math.abs(point2.x - point1.x);\r\n    const deltaY = Math.abs(point2.y - point1.y);\r\n    const signX = point1.x < point2.x ? matrixSize : -matrixSize;\r\n    const signY = point1.y < point2.y ? matrixSize : -matrixSize;\r\n    let error = deltaX - deltaY;\r\n    draw(point2);\r\n    while(point1.x != point2.x || point1.y != point2.y) {\r\n        draw(point1);\r\n        let error2 = error * 2;\r\n        if(error2 > -deltaY) {\r\n            error -= deltaY;\r\n            point1.x += signX;\r\n        }\r\n        if(error2 < deltaX) {\r\n            error += deltaX;\r\n            point1.y += signY;\r\n        }\r\n    }\r\n}\r\n\r\nfunction setPictureToCanvas(imgUrl)\r\n{\r\n    const canvas = document.getElementById('work-canvas')\r\n    imgUrl = imgUrl;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const image = new Image();\r\n    image.crossOrigin = 'annonymous';\r\n    image.src = imgUrl;\r\n    canvas.width = canvasSize;\r\n    canvas.height = canvasSize;\r\n    ctx.mozImageSmoothingEnabled = false;\r\n    ctx.webkitImageSmoothingEnabled = false;\r\n    ctx.msImageSmoothingEnabled = false;\r\n    ctx.imageSmoothingEnabled = false;\r\n    image.onload = () => { \r\n        const xPosition = maxCanvasSize - image.width === 0 ? 0 : Math.floor(Math.abs(maxCanvasSize - image.width)/2);\r\n        const yPosition = maxCanvasSize - image.height === 0 ? 0 : Math.floor(Math.abs(maxCanvasSize - image.height)/2);\r\n        const pixelSize = maxCanvasSize/canvasSize;\r\n        const heightProp = image.height/ maxCanvasSize;\r\n        const widthProp = image.width/ maxCanvasSize;\r\n        if(image.width <= maxCanvasSize && image.height <= maxCanvasSize)\r\n            ctx.drawImage(image, xPosition/pixelSize, yPosition/pixelSize, widthProp*canvasSize, heightProp*canvasSize)\r\n        else if(image.width > maxCanvasSize)\r\n            ctx.drawImage(image, 0, yPosition/pixelSize, canvasSize, heightProp*canvasSize)\r\n        else if(image.height > maxCanvasSize)\r\n            ctx.drawImage(image, xPosition/pixelSize, 0, widthProp*canvasSize, canvasSize)\r\n        else \r\n            ctx.drawImage(image, 0, 0, canvasSize, canvasSize)\r\n    };\r\n} \r\n\r\nclass Point {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    toString(){\r\n        return `${this.x} ${this.y}`;\r\n    }\r\n}\r\n\r\nasync function getRandomImage(event)\r\n{\r\n    const canvas = document.getElementById('work-canvas');\r\n    const searchLine = document.getElementById('search-input');\r\n    const queryString = `?query=town,${searchLine.value === '' ? 'Copenhagen' : searchLine.value}&client_id=90bd65afe3864739c33072768bf7c9d1ad8ce7cd908cc12681abf5986f4c80b8`;\r\n    try {\r\n        const response = await fetch(randomImageUrl+queryString);\r\n        const data = await response.json();\r\n        setPictureToCanvas(data.urls.small);\r\n        isImageLoaded = true;\r\n        localStorage.setItem('isImageLoaded', isImageLoaded);\r\n        localStorage.setItem('currentImage', data.urls.small);\r\n    } catch(error) {\r\n        alert(error);\r\n    }\r\n }\r\n\r\nfunction setCanvasImageToLocalStorage(canvas) {\r\n    const tempCanvas = document.createElement('canvas');\r\n    tempCanvas.width = 512;\r\n    tempCanvas.height = 512;\r\n    const ctx = tempCanvas.getContext('2d');\r\n    const image = new Image();\r\n    image.src = canvas.toDataURL();\r\n    image.onload = () => {\r\n        ctx.mozImageSmoothingEnabled = false;\r\n        ctx.webkitImageSmoothingEnabled = false;\r\n        ctx.msImageSmoothingEnabled = false;\r\n        ctx.imageSmoothingEnabled = false;\r\n        tempCanvas.style.imageRendering = 'pixelated';\r\n        ctx.drawImage(image, 0,0, tempCanvas.width, tempCanvas.height)\r\n        localStorage.setItem('currentImage', tempCanvas.toDataURL());\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/slider.js":
/*!***********************!*\
  !*** ./src/slider.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Slider; });\n\r\n\r\nclass Slider {\r\n    constructor() {\r\n        this.values = [32, 64,128, 256, 512];  \r\n        this.rangeSlider = document.getElementById(\"rs-range-line\");\r\n        this.rangeBullet = document.getElementById(\"rs-bullet\");\r\n        this.rangeBulletValue = document.getElementById(\"rs-bullet-value\");\r\n        this.maxRealValue = this.rangeSlider.max;\r\n        \r\n    }\r\n\r\n    Init(value) {\r\n        this.rangeSlider.value = value;\r\n        this.value = this.values[this.rangeSlider.value];\r\n        this.setBulletPosition();\r\n        this.rangeSlider.addEventListener(\"input\", () => {\r\n            this.value = this.values[this.rangeSlider.value];\r\n            this.setBulletPosition();\r\n        })\r\n    }\r\n\r\n    setBulletPosition () {\r\n        this.rangeBulletValue.innerHTML = this.values[this.rangeSlider.value];\r\n        let bulletPosition = (this.rangeSlider.value /this.rangeSlider.max);\r\n        this.rangeBullet.style.left = (bulletPosition * 490) + \"px\";\r\n    }\r\n\r\n    getValue () { \r\n        return this.value;\r\n    }\r\n\r\n    getRealValue() { \r\n        this.rangeSlider.value;\r\n    }\r\n\r\n    onChange(func) {\r\n        this.rangeSlider.addEventListener('input', func);\r\n        return this;\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///./src/slider.js?");

/***/ }),

/***/ "./src/user.js":
/*!*********************!*\
  !*** ./src/user.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return User; });\nclass User {\r\n    constructor(login, avatarUrl){\r\n        this.login = login;\r\n        this.avatarUrl = avatarUrl;\r\n    }\r\n}\n\n//# sourceURL=webpack:///./src/user.js?");

/***/ })

/******/ });